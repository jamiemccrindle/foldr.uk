(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{108:function(e,n,r){"use strict";r.d(n,"a",(function(){return l})),r.d(n,"b",(function(){return b}));var t=r(0),a=r.n(t);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function s(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function c(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=a.a.createContext({}),u=function(e){var n=a.a.useContext(p),r=n;return e&&(r="function"==typeof e?e(n):s(s({},n),e)),r},l=function(e){var n=u(e.components);return a.a.createElement(p.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},d=a.a.forwardRef((function(e,n){var r=e.components,t=e.mdxType,o=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),l=u(r),d=t,b=l["".concat(i,".").concat(d)]||l[d]||m[d]||o;return r?a.a.createElement(b,s(s({ref:n},p),{},{components:r})):a.a.createElement(b,s({ref:n},p))}));function b(e,n){var r=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var o=r.length,i=new Array(o);i[0]=d;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:t,i[1]=s;for(var p=2;p<o;p++)i[p]=r[p];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},66:function(e,n,r){"use strict";r.r(n),r.d(n,"frontMatter",(function(){return i})),r.d(n,"metadata",(function(){return s})),r.d(n,"toc",(function(){return c})),r.d(n,"default",(function(){return u}));var t=r(3),a=r(7),o=(r(0),r(108)),i={slug:"azure-bicep-app-service-custom-container",title:"Building an Azure App Service with a customer container using Bicep",author:"Jamie McCrindle",author_title:"foldr",author_url:"https://github.com/jamiemccrindle",author_image_url:"https://avatars.githubusercontent.com/u/909696?s=60&v=4",tags:["azure","bicep","app-service","docker"]},s={permalink:"/azure-bicep-app-service-custom-container",editUrl:"https://github.com/jamiemccrindle/foldr.uk/tree/main/foldr-uk-website/blog/blog/2021-05-30-bicep-app-service-container.md",source:"@site/blog/2021-05-30-bicep-app-service-container.md",description:"Azure App Service with custom containers is a convenient way to host docker containers in Azure. While there",date:"2021-05-30T00:00:00.000Z",formattedDate:"May 30, 2021",tags:[{label:"azure",permalink:"/tags/azure"},{label:"bicep",permalink:"/tags/bicep"},{label:"app-service",permalink:"/tags/app-service"},{label:"docker",permalink:"/tags/docker"}],title:"Building an Azure App Service with a customer container using Bicep",readingTime:2.77,truncated:!1,nextItem:{title:"Keep your Azure Costs low by removing dev resources from resource groups on a schedule.",permalink:"/github-actions-schedule-to-delete-resources-from-resource-group"}},c=[{value:"First, a word on scope maps and tokens",id:"first-a-word-on-scope-maps-and-tokens",children:[]},{value:"Setting up your ACR",id:"setting-up-your-acr",children:[]},{value:"Generating passwords for your tokens",id:"generating-passwords-for-your-tokens",children:[]},{value:"Setting up your App Service with Custom Container",id:"setting-up-your-app-service-with-custom-container",children:[]}],p={toc:c};function u(e){var n=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(t.a)({},p,r,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Azure App Service with custom containers is a convenient way to host docker containers in Azure. While there\nare a number of tutorials on how to do this with ",Object(o.b)("inlineCode",{parentName:"p"},"az cli")," there aren't too many the show how to do it with\nARM templates or Azure Bicep. Read on to see how to set up an Azure Container Registry, create scope maps and scope mapped tokens, build and push a custom image and finally use that custom image in your Azure App Service."),Object(o.b)("h2",{id:"first-a-word-on-scope-maps-and-tokens"},"First, a word on scope maps and tokens"),Object(o.b)("p",null,"Azure Container Registry has a number of authentication mechanisms for pulling docker images. The only one that lets you limit access to specific docker images are ",Object(o.b)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/azure/container-registry/container-registry-repository-scoped-permissions"},"scoped mapped tokens")," which is why I'm going to use them in this example."),Object(o.b)("div",{className:"admonition admonition-info alert alert--info"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"note")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"Scope Maps and Scope Map Tokens are currently in preview, so use with caution."))),Object(o.b)("h2",{id:"setting-up-your-acr"},"Setting up your ACR"),Object(o.b)("p",null,"You'll need a Container Registry to host your custom container. The following bicep sets up a Premium Azure Container Registry. The reason I'm using a Premium SKU is so that I can create scoped maps and scope mapped tokens."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bicep"},"param location string = resourceGroup().location\n\nresource acr 'Microsoft.ContainerRegistry/registries@2019-12-01-preview' = {\n  name: acrName\n  location: location\n  sku: {\n    name: 'Premium' // to support scope mapped tokens\n  }\n  properties: {\n    adminUserEnabled: false\n  }\n}\n")),Object(o.b)("p",null,"You may also want to assign an owner to your ACR"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bicep"},"param ownerPrincipalId string\n\nresource ownerRoleAssignment 'Microsoft.Authorization/roleAssignments@2018-01-01-preview' = {\n  name: guid('${acr.id}/${ownerPrincipalId}/owner')\n  scope: acr\n  properties: {\n    roleDefinitionId: '/subscriptions/${subscription().subscriptionId}/providers/Microsoft.Authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635'\n    principalId: ownerPrincipalId\n  }\n}\n")),Object(o.b)("p",null,"And set up your scope maps and scope mapped tokens"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bicep"},"// create a scope map for your repository\nresource bicepAppServiceContainerScopeMap 'Microsoft.ContainerRegistry/registries/scopeMaps@2020-11-01-preview' = {\n  parent: acr\n  name: 'bicepAppServiceContainer'\n  properties: {\n    actions: [\n      'repositories/bicep-app-service-container/content/read'\n      'repositories/bicep-app-service-container/metadata/read'\n    ]\n  }\n}\n\n// create a token and associate it with your scope map\nresource bicepAppServiceContainerToken 'Microsoft.ContainerRegistry/registries/tokens@2020-11-01-preview' = {\n  parent: acr\n  name: 'bicepAppServiceContainer'\n  properties: {\n    scopeMapId: bicepAppServiceContainerScopeMap.id\n    status: 'enabled'\n  }\n}\n")),Object(o.b)("h2",{id:"generating-passwords-for-your-tokens"},"Generating passwords for your tokens"),Object(o.b)("p",null,"The bicep above will create the scope map tokens but will not generate the passwords. You'll need ",Object(o.b)("inlineCode",{parentName:"p"},"az cli")," for that."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-shell"},"ACR_PULL_TOKEN=$(az acr token credential generate -n bicepAppServiceContainer -r $ACR_NAME --expiration-in-days 30 --query passwords[0].value -o tsv)\n")),Object(o.b)("p",null,"This will generate the passwords and set ACR_PULL_TOKEN to be the value of one of the generated passwords."),Object(o.b)("h2",{id:"setting-up-your-app-service-with-custom-container"},"Setting up your App Service with Custom Container"),Object(o.b)("p",null,"Use the bicep below to create a linux App Service plan and an App Service that uses your custom container."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bicep"},"@description('The name of the app service that you wish to create.')\nparam siteName string\n\n@description('The docker registry hostname.')\nparam dockerRegistryHost string\n\n@description('The docker registry username.')\nparam dockerUsername string;\n\n@secure()\n@description('The docker registry password.')\nparam dockerPassword string\n\n@description('The relative docker image name.')\nparam dockerImage string\n\nvar servicePlanName = 'plan-${siteName}-001'\n\nresource servicePlan 'Microsoft.Web/serverfarms@2016-09-01' = {\n  kind: 'linux'\n  name: servicePlanName\n  location: resourceGroup().location\n  properties: {\n    name: servicePlanName\n    reserved: true\n  }\n  sku: {\n    tier: 'Standard'\n    name: 'S1'\n  }\n  dependsOn: []\n}\n\nresource siteName_resource 'Microsoft.Web/sites@2016-08-01' = {\n  name: siteName\n  location: resourceGroup().location\n  properties: {\n    siteConfig: {\n      appSettings: [\n        {\n          name: 'WEBSITES_ENABLE_APP_SERVICE_STORAGE'\n          value: 'false'\n        }\n        {\n          name: 'DOCKER_REGISTRY_SERVER_URL'\n          value: 'https://${dockerRegistryHost}'\n        }\n        {\n          name: 'DOCKER_REGISTRY_SERVER_USERNAME'\n          value: dockerUsername\n        }\n        {\n          name: 'DOCKER_REGISTRY_SERVER_PASSWORD'\n          value: dockerPassword\n        }\n      ]\n      linuxFxVersion: 'DOCKER|${dockerRegistryHost}/${dockerImage}'\n    }\n    serverFarmId: servicePlan.id\n  }\n}\n")),Object(o.b)("p",null,"To see a working example, have a look at the following repository ",Object(o.b)("a",{parentName:"p",href:"https://github.com/jamiemccrindle/bicep-app-service-container"},"https://github.com/jamiemccrindle/bicep-app-service-container")))}u.isMDXComponent=!0}}]);