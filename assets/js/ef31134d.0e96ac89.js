(self.webpackChunkfoldr_uk_website=self.webpackChunkfoldr_uk_website||[]).push([[9934],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return c},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),u=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(r),m=a,_=d["".concat(l,".").concat(m)]||d[m]||p[m]||o;return r?n.createElement(_,i(i({ref:t},c),{},{components:r})):n.createElement(_,i({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2728:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return u},default:function(){return p}});var n=r(2122),a=r(9756),o=(r(7294),r(3905)),i={slug:"rotating-azure-credentials-in-github-with-terraform",title:"How to rotate your AZURE_CREDENTIALS in GitHub with Terraform",author:"Jamie McCrindle",author_title:"foldr",author_url:"https://github.com/jamiemccrindle",author_image_url:"https://avatars.githubusercontent.com/u/909696?s=60&v=4",tags:["terraform","azure","github"]},s=void 0,l={permalink:"/rotating-azure-credentials-in-github-with-terraform",editUrl:"https://github.com/jamiemccrindle/foldr.uk/tree/main/foldr-uk-website/blog/blog/2021-04-28-rotating-azure-credentials-in-github-with-terraform.md",source:"@site/blog/2021-04-28-rotating-azure-credentials-in-github-with-terraform.md",title:"How to rotate your AZURE_CREDENTIALS in GitHub with Terraform",description:"If you're deploying your Azure infrastructure from GitHub, you'll need Azure service principal credentials stored as secret variables.",date:"2021-04-28T00:00:00.000Z",formattedDate:"April 28, 2021",tags:[{label:"terraform",permalink:"/tags/terraform"},{label:"azure",permalink:"/tags/azure"},{label:"github",permalink:"/tags/github"}],readingTime:2.775,truncated:!1,prevItem:{title:"Keep your Azure Costs low by removing dev resources from resource groups on a schedule.",permalink:"/github-actions-schedule-to-delete-resources-from-resource-group"},nextItem:{title:"Install a specific version of Terraform in a Github Action using apt",permalink:"/how-to-install-a-specific-version-of-terraform-github-actions-using-apt-get"}},u=[{value:"Using the module",id:"using-the-module",children:[]}],c={toc:u};function p(e){var t=e.components,r=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"If you're deploying your Azure infrastructure from GitHub, you'll need Azure service principal credentials stored as secret variables.\nYou may also want to rotate those credentials. This entry describes how you can use Terraform in your GitHub actions to configure\nand rotate your Azure service principal credentials."),(0,o.kt)("p",null,"In a ",(0,o.kt)("a",{parentName:"p",href:"https://foldr.uk/terraform-rotate-secrets"},"previous post, I describe how to safely rotate credentials using Terraform"),". This post\nbuilds on that by showing you how to create client secrets for your Azure service principals and store them as secrets in GitHub."),(0,o.kt)("p",null,"First off, we'll create a Terraform module that will manage the secret rotation in Azure and GitHub. This stores everything you need\nto be able to deploy from GitHub to Azure, including information about the credentials, service principal, tenant and subscription."),(0,o.kt)("p",null,"It stores them both as an AZURE_CREDENTIALS json block that matches the output of ",(0,o.kt)("inlineCode",{parentName:"p"},"az ad sp create-for-rbac --sdk-auth")," which is\nuseful for the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/marketplace/actions/azure-login"},"Azure Login GitHub Action")," under the variable AZURE_CREDENTIALS\nas well as broken out into ARM_CLIENT_ID, ARM_TENANT_ID, ARM_SUBSCRIPTION_ID and ARM_CLIENT_SECRET which is useful for running\nTerraform in GitHub Actions."),(0,o.kt)("p",null,"The format of the sdk-auth that the Azure Login GitHub Action requires is as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "clientId": "APPLICATION_ID",\n  "clientSecret": "CLIENT_SECRET",\n  "subscriptionId": "SUBSCRIPTION_ID",\n  "tenantId": "TENANT_ID",\n  "activeDirectoryEndpointUrl": "https://login.microsoftonline.com",\n  "resourceManagerEndpointUrl": "https://management.azure.com/",\n  "activeDirectoryGraphResourceId": "https://graph.windows.net/",\n  "sqlManagementEndpointUrl": "https://management.core.windows.net:8443/",\n  "galleryEndpointUrl": "https://gallery.azure.com/",\n  "managementEndpointUrl": "https://management.core.windows.net/"\n}\n')),(0,o.kt)("p",null,"The following files will create a Terraform module that will allow you to safely rotate secrets in Azure and store the currently\nactive secret in GitHub secrets for use in GitHub Actions:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"provider.tf")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-hcl"},'provider "azurerm" {\n  features {}\n}\n')),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"variables.tf")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-hcl"},'variable "subscription_id" { type = string }\nvariable "tenant_id" { type = string }\nvariable "repository" { type = string }\nvariable "application_id" { type = string }\nvariable "application_object_id" { type = string }\nvariable "date" { type = string }\n')),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"main.tf")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-hcl"},'locals {\n  date        = tonumber(var.date)\n  odd_keeper  = floor((local.date + 1) / 2)\n  even_keeper = floor(local.date / 2)\n  use_even    = local.date % 2 == 0\n}\n\nresource "random_uuid" "odd" {\n}\n\nresource "azuread_application_password" "odd" {\n  application_object_id = var.application_object_id\n  description           = "odd"\n  value                 = random_password.odd.result\n  end_date_relative     = "1440h"\n  key_id                = random_uuid.odd.result\n}\n\nresource "random_password" "odd" {\n  keepers = {\n    "date" = local.odd_keeper\n  }\n  length  = 64\n}\n\nresource "random_uuid" "even" {\n}\n\nresource "azuread_application_password" "even" {\n  application_object_id = var.application_object_id\n  description           = "even"\n  value                 = random_password.even.result\n  end_date_relative     = "1440h"\n  key_id                = random_uuid.even.result\n}\n\nresource "random_password" "even" {\n  keepers = {\n    "date" = local.even_keeper\n  }\n  length  = 64\n}\n\nresource "github_actions_secret" "terraform" {\n  repository      = var.repository\n  secret_name     = "AZURE_CREDENTIALS"\n  plaintext_value = <<-EOT\n{\n  "clientId": "${var.application_id}",\n  "clientSecret": "${local.use_even ? random_password.even.result : random_password.odd.result}",\n  "subscriptionId": "${var.subscription_id}",\n  "tenantId": "${var.tenant_id}",\n  "activeDirectoryEndpointUrl": "https://login.microsoftonline.com",\n  "resourceManagerEndpointUrl": "https://management.azure.com/",\n  "activeDirectoryGraphResourceId": "https://graph.windows.net/",\n  "sqlManagementEndpointUrl": "https://management.core.windows.net:8443/",\n  "galleryEndpointUrl": "https://gallery.azure.com/",\n  "managementEndpointUrl": "https://management.core.windows.net/"\n}\nEOT\n}\n\nresource "github_actions_secret" "arm_client_id" {\n  repository = var.repository\n  secret_name = "ARM_CLIENT_ID"\n  plaintext_value = var.application_id\n}\n\nresource "github_actions_secret" "arm_client_secret" {\n  repository = var.repository\n  secret_name = "ARM_CLIENT_SECRET"\n  plaintext_value = local.use_even ? random_password.even.result : random_password.odd.result\n}\n\nresource "github_actions_secret" "arm_subscription_id" {\n  repository = var.repository\n  secret_name = "ARM_SUBSCRIPTION_ID"\n  plaintext_value = var.subscription_id\n}\n\nresource "github_actions_secret" "arm_tenant_id" {\n  repository = var.repository\n  secret_name = "ARM_TENANT_ID"\n  plaintext_value = var.tenant_id\n}\n')),(0,o.kt)("h2",{id:"using-the-module"},"Using the module"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-hcl"},'module "example_github_azure" {\n  source                = "LOCATION_OF_MODULE"\n  subscription_id       = AZURE_SUBSCRIPTION_ID\n  tenant_id             = AZURE_TENANT_ID\n  repository            = GITHUB_REPO_NAME\n  application_id        = AZURE_APPLICATION_ID\n  application_object_id = AZURE_APPLICATION_OBJECT_ID\n  date                  = var.date\n}\n')),(0,o.kt)("p",null,"To see it in action, have a look at this repository ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/jamiemccrindle/azure-rotate-service-principal-github-secrets"},"https://github.com/jamiemccrindle/azure-rotate-service-principal-github-secrets")))}p.isMDXComponent=!0}}]);